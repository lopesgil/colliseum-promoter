{"ast":null,"code":"var _jsxFileName = \"D:\\\\coliseum\\\\colliseum-promoter\\\\src\\\\pages\\\\Home.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useForm, Controller } from 'react-hook-form';\nexport default function Login() {\n  var _this = this;\n\n  var _useForm = useForm({\n    mode: 'onTouched'\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    console.log(data);\n  };\n\n  var onError = function onError(errors) {\n    console.log(errors);\n  };\n\n  var navigation = useNavigation();\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.formBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, \"E-mail:\"), React.createElement(Controller, {\n    control: control,\n    render: function render(props) {\n      return React.createElement(TextInput, {\n        autoCompleteType: \"email\",\n        autoCorrect: false,\n        keyboardType: \"email-address\",\n        textContentType: \"emailAddress\",\n        style: styles.input,\n        onBlur: props.onBlur,\n        onChangeText: function onChangeText(value) {\n          return props.onChange(value);\n        },\n        value: props.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }\n      });\n    },\n    rules: {\n      required: 'O e-mail é obrigatório.',\n      pattern: {\n        value: /^\\S+@\\S+$/i,\n        message: 'Formato de e-mail inválido.'\n      }\n    },\n    name: \"email\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }), errors.email && React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 38\n    }\n  }, errors.email.message)), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Senha:\"), React.createElement(Controller, {\n    control: control,\n    render: function render(props) {\n      return React.createElement(TextInput, {\n        secureTextEntry: true,\n        autoCompleteType: \"password\",\n        autoCorrect: false,\n        textContentType: \"password\",\n        style: styles.input,\n        onBlur: props.onBlur,\n        onChangeText: function onChangeText(value) {\n          return props.onChange(value);\n        },\n        value: props.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }\n      });\n    },\n    rules: {\n      required: 'A senha é obrigatória.'\n    },\n    name: \"password\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }), errors.password && React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 41\n    }\n  }, errors.password.message)), React.createElement(View, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"ENTRAR\",\n    onPress: handleSubmit(onSubmit, onError),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"CADASTRAR-SE\",\n    onPress: function onPress() {\n      return navigation.navigate('Register');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"EDITAR EVENTO (TESTE)\",\n    onPress: function onPress() {\n      return navigation.navigate('EditEvent');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    justifyContent: 'center',\n    backgroundColor: '#0e101c'\n  },\n  formBox: {\n    paddingVertical: 20\n  },\n  label: {\n    margin: 10,\n    marginLeft: 0,\n    color: 'white'\n  },\n  button: {\n    marginTop: 20,\n    height: 40,\n    borderRadius: 4\n  },\n  input: {\n    backgroundColor: 'white',\n    height: 40,\n    padding: 10,\n    borderRadius: 20\n  }\n});","map":{"version":3,"sources":["D:/coliseum/colliseum-promoter/src/pages/Home.tsx"],"names":["React","useNavigation","useForm","Controller","Login","mode","control","handleSubmit","errors","onSubmit","data","console","log","onError","navigation","styles","container","formBox","label","props","input","onBlur","value","onChange","required","pattern","message","email","color","password","button","navigate","StyleSheet","create","flex","padding","justifyContent","backgroundColor","paddingVertical","margin","marginLeft","marginTop","height","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, Button, TextInput } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useForm, Controller } from 'react-hook-form';\r\n\r\n\r\nexport default function Login() {\r\n    const { control, handleSubmit, errors } = useForm({ mode: 'onTouched' });\r\n    const onSubmit = (data: FormData) => { console.log(data) };\r\n    const onError = (errors: Object) => { console.log(errors) };\r\n    const navigation = useNavigation();\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.formBox}>\r\n                <View>\r\n                    <Text style={styles.label}>E-mail:</Text>\r\n                    <Controller\r\n                        control={control}\r\n                        render={(props) => (\r\n                            <TextInput\r\n                                autoCompleteType='email'\r\n                                autoCorrect={false}\r\n                                keyboardType='email-address'\r\n                                textContentType='emailAddress'\r\n                                style={styles.input}\r\n                                onBlur={props.onBlur}\r\n                                onChangeText={(value) => props.onChange(value)}\r\n                                value={props.value}\r\n                            />\r\n                        )}\r\n                        rules={{\r\n                            required: 'O e-mail é obrigatório.',\r\n                            pattern: {\r\n                                value: /^\\S+@\\S+$/i,\r\n                                message: 'Formato de e-mail inválido.'\r\n                            },\r\n                        }}\r\n                        name='email'\r\n                        defaultValue=''\r\n                    />\r\n                    {errors.email && <Text style={{ color: 'red' }}>{errors.email.message}</Text>}\r\n                </View>\r\n                <View>\r\n                    <Text style={styles.label}>Senha:</Text>\r\n                    <Controller\r\n                        control={control}\r\n                        render={(props) => (\r\n                            <TextInput\r\n                                secureTextEntry\r\n                                autoCompleteType='password'\r\n                                autoCorrect={false}\r\n                                textContentType='password'\r\n                                style={styles.input}\r\n                                onBlur={props.onBlur}\r\n                                onChangeText={(value) => props.onChange(value)}\r\n                                value={props.value}\r\n                            />\r\n                        )}\r\n                        rules={{ required: 'A senha é obrigatória.' }}\r\n                        name='password'\r\n                        defaultValue=''\r\n                    />\r\n                    {errors.password && <Text style={{ color: 'red' }}>{errors.password.message}</Text>}\r\n                </View>\r\n                <View style={styles.button}>\r\n                    <Button title='ENTRAR' onPress={handleSubmit(onSubmit, onError)} />\r\n                </View>\r\n                <View style={styles.button}>\r\n                    <Button title='CADASTRAR-SE' onPress={() => navigation.navigate('Register')} />\r\n                </View>\r\n                <View style={styles.button}>\r\n                    <Button title='EDITAR EVENTO (TESTE)' onPress={() => navigation.navigate('EditEvent')} />\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 8,\r\n        justifyContent: 'center',\r\n        backgroundColor: '#0e101c',\r\n    },\r\n    formBox: {\r\n        paddingVertical: 20,\r\n    },\r\n    label: {\r\n        margin: 10,\r\n        marginLeft: 0,\r\n        color: 'white',\r\n    },\r\n    button: {\r\n        marginTop: 20,\r\n        height: 40,\r\n        borderRadius: 4,\r\n    },\r\n    input: {\r\n        backgroundColor: 'white',\r\n        height: 40,\r\n        padding: 10,\r\n        borderRadius: 20,\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}