{"ast":null,"code":"var _jsxFileName = \"D:\\\\coliseum\\\\colliseum-promoter\\\\src\\\\pages\\\\Register.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useForm, Controller } from 'react-hook-form';\nexport default function Register() {\n  var _this = this;\n\n  var _useForm = useForm({\n    mode: 'onTouched'\n  }),\n      control = _useForm.control,\n      getValues = _useForm.getValues,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    console.log(data);\n  };\n\n  var onError = function onError(errors) {\n    console.log(errors);\n  };\n\n  var navigation = useNavigation();\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.formBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, \"Nome:\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref) {\n      var onBlur = _ref.onBlur,\n          onChange = _ref.onChange,\n          value = _ref.value;\n      return React.createElement(TextInput, {\n        autoCompleteType: \"name\",\n        autoCorrect: false,\n        textContentType: \"name\",\n        style: styles.input,\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }\n      });\n    },\n    rules: {\n      required: 'O nome é obrigatório.'\n    },\n    name: \"name\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }), errors.name && React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 37\n    }\n  }, errors.name.message)), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"E-mail:\"), React.createElement(Controller, {\n    control: control,\n    render: function render(props) {\n      return React.createElement(TextInput, {\n        autoCompleteType: \"email\",\n        autoCorrect: false,\n        keyboardType: \"email-address\",\n        textContentType: \"emailAddress\",\n        style: styles.input,\n        onBlur: props.onBlur,\n        onChangeText: function onChangeText(value) {\n          return props.onChange(value);\n        },\n        value: props.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }\n      });\n    },\n    rules: {\n      required: 'O e-mail é obrigatório.',\n      pattern: {\n        value: /^\\S+@\\S+$/i,\n        message: 'Formato de e-mail inválido.'\n      }\n    },\n    name: \"email\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }), errors.email && React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 38\n    }\n  }, errors.email.message)), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Telefone:\"), React.createElement(Controller, {\n    control: control,\n    render: function render(props) {\n      return React.createElement(TextInput, {\n        autoCompleteType: \"tel\",\n        autoCorrect: false,\n        keyboardType: \"phone-pad\",\n        textContentType: \"telephoneNumber\",\n        style: styles.input,\n        onBlur: props.onBlur,\n        onChangeText: function onChangeText(value) {\n          return props.onChange(value);\n        },\n        value: props.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }\n      });\n    },\n    rules: {\n      required: 'O telefone é obrigatório.'\n    },\n    name: \"phoneNumber\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), errors.phoneNumber && React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 44\n    }\n  }, errors.phoneNumber.message)), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"Senha:\"), React.createElement(Controller, {\n    control: control,\n    render: function render(props) {\n      return React.createElement(TextInput, {\n        secureTextEntry: true,\n        autoCompleteType: \"password\",\n        autoCorrect: false,\n        textContentType: \"newPassword\",\n        style: styles.input,\n        onBlur: props.onBlur,\n        onChangeText: function onChangeText(value) {\n          return props.onChange(value);\n        },\n        value: props.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }\n      });\n    },\n    rules: {\n      required: 'A senha é obrigatória.'\n    },\n    name: \"password\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }), errors.password && React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 41\n    }\n  }, errors.password.message)), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, \"Confirma\\xE7\\xE3o de senha:\"), React.createElement(Controller, {\n    control: control,\n    render: function render(props) {\n      return React.createElement(TextInput, {\n        secureTextEntry: true,\n        autoCompleteType: \"password\",\n        autoCorrect: false,\n        textContentType: \"password\",\n        style: styles.input,\n        onBlur: props.onBlur,\n        onChangeText: function onChangeText(value) {\n          return props.onChange(value);\n        },\n        value: props.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }\n      });\n    },\n    rules: {\n      required: 'A confirmação de senha é obrigatória.',\n      validate: {\n        matchesPreviousPassword: function matchesPreviousPassword(value) {\n          var _getValues = getValues(),\n              password = _getValues.password;\n\n          return password === value || 'As senhas não coincidem.';\n        }\n      }\n    },\n    name: \"passwordConfirmation\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }), errors.passwordConfirmation && React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 53\n    }\n  }, errors.passwordConfirmation.message)), React.createElement(View, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"CADASTRAR\",\n    onPress: handleSubmit(onSubmit, onError),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    justifyContent: 'center',\n    backgroundColor: '#0e101c'\n  },\n  formBox: {\n    paddingVertical: 20\n  },\n  label: {\n    margin: 10,\n    marginLeft: 0,\n    color: 'white'\n  },\n  button: {\n    marginTop: 20,\n    height: 40,\n    borderRadius: 4\n  },\n  input: {\n    backgroundColor: 'white',\n    height: 40,\n    padding: 10,\n    borderRadius: 20\n  }\n});","map":{"version":3,"sources":["D:/coliseum/colliseum-promoter/src/pages/Register.tsx"],"names":["React","useNavigation","useForm","Controller","Register","mode","control","getValues","handleSubmit","errors","onSubmit","data","console","log","onError","navigation","styles","container","formBox","label","onBlur","onChange","value","input","required","name","color","message","props","pattern","email","phoneNumber","password","validate","matchesPreviousPassword","passwordConfirmation","button","StyleSheet","create","flex","padding","justifyContent","backgroundColor","paddingVertical","margin","marginLeft","marginTop","height","borderRadius"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AAUA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA,iBACsBF,OAAO,CAAC;AAAEG,IAAAA,IAAI,EAAE;AAAR,GAAD,CAD7B;AAAA,MACvBC,OADuB,YACvBA,OADuB;AAAA,MACdC,SADc,YACdA,SADc;AAAA,MACHC,YADG,YACHA,YADG;AAAA,MACWC,MADX,YACWA,MADX;;AAE/B,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAwB;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAAmB,GAA9D;;AACA,MAAMG,OAAO,GAAG,SAAVA,OAAU,CAACL,MAAD,EAAoB;AAAEG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAAqB,GAA3D;;AACA,MAAMM,UAAU,GAAGd,aAAa,EAAhC;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEe,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,oBAAC,UAAD;AACI,IAAA,OAAO,EAAEb,OADb;AAEI,IAAA,MAAM,EAAE;AAAA,UAAGc,MAAH,QAAGA,MAAH;AAAA,UAAWC,QAAX,QAAWA,QAAX;AAAA,UAAqBC,KAArB,QAAqBA,KAArB;AAAA,aACJ,oBAAC,SAAD;AACI,QAAA,gBAAgB,EAAC,MADrB;AAEI,QAAA,WAAW,EAAE,KAFjB;AAGI,QAAA,eAAe,EAAC,MAHpB;AAII,QAAA,KAAK,EAAEN,MAAM,CAACO,KAJlB;AAKI,QAAA,MAAM,EAAEH,MALZ;AAMI,QAAA,YAAY,EAAE,sBAACE,KAAD;AAAA,iBAAWD,QAAQ,CAACC,KAAD,CAAnB;AAAA,SANlB;AAOI,QAAA,KAAK,EAAEA,KAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI;AAAA,KAFZ;AAaI,IAAA,KAAK,EAAE;AAAEE,MAAAA,QAAQ,EAAE;AAAZ,KAbX;AAcI,IAAA,IAAI,EAAC,MAdT;AAeI,IAAA,YAAY,EAAC,EAfjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAmBKf,MAAM,CAACgB,IAAP,IAAe,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCjB,MAAM,CAACgB,IAAP,CAAYE,OAA5C,CAnBpB,CADJ,EAsBI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,UAAD;AACI,IAAA,OAAO,EAAEb,OADb;AAEI,IAAA,MAAM,EAAE,gBAACsB,KAAD;AAAA,aACJ,oBAAC,SAAD;AACI,QAAA,gBAAgB,EAAC,OADrB;AAEI,QAAA,WAAW,EAAE,KAFjB;AAGI,QAAA,YAAY,EAAC,eAHjB;AAII,QAAA,eAAe,EAAC,cAJpB;AAKI,QAAA,KAAK,EAAEZ,MAAM,CAACO,KALlB;AAMI,QAAA,MAAM,EAAEK,KAAK,CAACR,MANlB;AAOI,QAAA,YAAY,EAAE,sBAACE,KAAD;AAAA,iBAAWM,KAAK,CAACP,QAAN,CAAeC,KAAf,CAAX;AAAA,SAPlB;AAQI,QAAA,KAAK,EAAEM,KAAK,CAACN,KARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI;AAAA,KAFZ;AAcI,IAAA,KAAK,EAAE;AACHE,MAAAA,QAAQ,EAAE,yBADP;AAEHK,MAAAA,OAAO,EAAE;AACLP,QAAAA,KAAK,EAAE,YADF;AAELK,QAAAA,OAAO,EAAE;AAFJ;AAFN,KAdX;AAqBI,IAAA,IAAI,EAAC,OArBT;AAsBI,IAAA,YAAY,EAAC,EAtBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EA0BKlB,MAAM,CAACqB,KAAP,IAAgB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEJ,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCjB,MAAM,CAACqB,KAAP,CAAaH,OAA7C,CA1BrB,CAtBJ,EAkDI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,UAAD;AACI,IAAA,OAAO,EAAEb,OADb;AAEI,IAAA,MAAM,EAAE,gBAACsB,KAAD;AAAA,aACJ,oBAAC,SAAD;AACI,QAAA,gBAAgB,EAAC,KADrB;AAEI,QAAA,WAAW,EAAE,KAFjB;AAGI,QAAA,YAAY,EAAC,WAHjB;AAII,QAAA,eAAe,EAAC,iBAJpB;AAKI,QAAA,KAAK,EAAEZ,MAAM,CAACO,KALlB;AAMI,QAAA,MAAM,EAAEK,KAAK,CAACR,MANlB;AAOI,QAAA,YAAY,EAAE,sBAACE,KAAD;AAAA,iBAAWM,KAAK,CAACP,QAAN,CAAeC,KAAf,CAAX;AAAA,SAPlB;AAQI,QAAA,KAAK,EAAEM,KAAK,CAACN,KARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI;AAAA,KAFZ;AAcI,IAAA,KAAK,EAAE;AAAEE,MAAAA,QAAQ,EAAE;AAAZ,KAdX;AAeI,IAAA,IAAI,EAAC,aAfT;AAgBI,IAAA,YAAY,EAAC,EAhBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAoBKf,MAAM,CAACsB,WAAP,IAAsB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEL,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCjB,MAAM,CAACsB,WAAP,CAAmBJ,OAAnD,CApB3B,CAlDJ,EAwEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,UAAD;AACI,IAAA,OAAO,EAAEb,OADb;AAEI,IAAA,MAAM,EAAE,gBAACsB,KAAD;AAAA,aACJ,oBAAC,SAAD;AACI,QAAA,eAAe,MADnB;AAEI,QAAA,gBAAgB,EAAC,UAFrB;AAGI,QAAA,WAAW,EAAE,KAHjB;AAII,QAAA,eAAe,EAAC,aAJpB;AAKI,QAAA,KAAK,EAAEZ,MAAM,CAACO,KALlB;AAMI,QAAA,MAAM,EAAEK,KAAK,CAACR,MANlB;AAOI,QAAA,YAAY,EAAE,sBAACE,KAAD;AAAA,iBAAWM,KAAK,CAACP,QAAN,CAAeC,KAAf,CAAX;AAAA,SAPlB;AAQI,QAAA,KAAK,EAAEM,KAAK,CAACN,KARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI;AAAA,KAFZ;AAcI,IAAA,KAAK,EAAE;AAAEE,MAAAA,QAAQ,EAAE;AAAZ,KAdX;AAeI,IAAA,IAAI,EAAC,UAfT;AAgBI,IAAA,YAAY,EAAC,EAhBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAoBKf,MAAM,CAACuB,QAAP,IAAmB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEN,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCjB,MAAM,CAACuB,QAAP,CAAgBL,OAAhD,CApBxB,CAxEJ,EA8FI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI,oBAAC,UAAD;AACI,IAAA,OAAO,EAAEb,OADb;AAEI,IAAA,MAAM,EAAE,gBAACsB,KAAD;AAAA,aACJ,oBAAC,SAAD;AACI,QAAA,eAAe,MADnB;AAEI,QAAA,gBAAgB,EAAC,UAFrB;AAGI,QAAA,WAAW,EAAE,KAHjB;AAII,QAAA,eAAe,EAAC,UAJpB;AAKI,QAAA,KAAK,EAAEZ,MAAM,CAACO,KALlB;AAMI,QAAA,MAAM,EAAEK,KAAK,CAACR,MANlB;AAOI,QAAA,YAAY,EAAE,sBAACE,KAAD;AAAA,iBAAWM,KAAK,CAACP,QAAN,CAAeC,KAAf,CAAX;AAAA,SAPlB;AAQI,QAAA,KAAK,EAAEM,KAAK,CAACN,KARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI;AAAA,KAFZ;AAcI,IAAA,KAAK,EAAE;AACHE,MAAAA,QAAQ,EAAE,uCADP;AAEHS,MAAAA,QAAQ,EAAE;AACNC,QAAAA,uBAAuB,EAAE,iCAACZ,KAAD,EAAW;AAAA,2BACXf,SAAS,EADE;AAAA,cACxByB,QADwB,cACxBA,QADwB;;AAEhC,iBAAOA,QAAQ,KAAKV,KAAb,IAAsB,0BAA7B;AACH;AAJK;AAFP,KAdX;AAuBI,IAAA,IAAI,EAAC,sBAvBT;AAwBI,IAAA,YAAY,EAAC,EAxBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EA4BKb,MAAM,CAAC0B,oBAAP,IAA+B,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAET,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCjB,MAAM,CAAC0B,oBAAP,CAA4BR,OAA5D,CA5BpC,CA9FJ,EA4HI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACoB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,OAAO,EAAE5B,YAAY,CAACE,QAAD,EAAWI,OAAX,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA5HJ,CADJ,CADJ;AAoIH;AAED,IAAME,MAAM,GAAGqB,UAAU,CAACC,MAAX,CAAkB;AAC7BrB,EAAAA,SAAS,EAAE;AACPsB,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,OAAO,EAAE,CAFF;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,eAAe,EAAE;AAJV,GADkB;AAO7BxB,EAAAA,OAAO,EAAE;AACLyB,IAAAA,eAAe,EAAE;AADZ,GAPoB;AAU7BxB,EAAAA,KAAK,EAAE;AACHyB,IAAAA,MAAM,EAAE,EADL;AAEHC,IAAAA,UAAU,EAAE,CAFT;AAGHnB,IAAAA,KAAK,EAAE;AAHJ,GAVsB;AAe7BU,EAAAA,MAAM,EAAE;AACJU,IAAAA,SAAS,EAAE,EADP;AAEJC,IAAAA,MAAM,EAAE,EAFJ;AAGJC,IAAAA,YAAY,EAAE;AAHV,GAfqB;AAoB7BzB,EAAAA,KAAK,EAAE;AACHmB,IAAAA,eAAe,EAAE,OADd;AAEHK,IAAAA,MAAM,EAAE,EAFL;AAGHP,IAAAA,OAAO,EAAE,EAHN;AAIHQ,IAAAA,YAAY,EAAE;AAJX;AApBsB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, Button, TextInput } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useForm, Controller } from 'react-hook-form';\r\n\r\ninterface RegisterData {\r\n    name: string,\r\n    email: string,\r\n    phoneNumber: string,\r\n    password: string,\r\n    passwordConfirmation: string,\r\n}\r\n\r\nexport default function Register() {\r\n    const { control, getValues, handleSubmit, errors } = useForm({ mode: 'onTouched' });\r\n    const onSubmit = (data: RegisterData) => { console.log(data) };\r\n    const onError = (errors: Object) => { console.log(errors) };\r\n    const navigation = useNavigation();\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.formBox}>\r\n                <View>\r\n                    <Text style={styles.label}>Nome:</Text>\r\n                    <Controller\r\n                        control={control}\r\n                        render={({ onBlur, onChange, value }) => (\r\n                            <TextInput\r\n                                autoCompleteType='name'\r\n                                autoCorrect={false}\r\n                                textContentType='name'\r\n                                style={styles.input}\r\n                                onBlur={onBlur}\r\n                                onChangeText={(value) => onChange(value)}\r\n                                value={value}\r\n                            />\r\n                        )}\r\n                        rules={{ required: 'O nome é obrigatório.' }}\r\n                        name='name'\r\n                        defaultValue=''\r\n                    />\r\n                    {errors.name && <Text style={{ color: 'red' }}>{errors.name.message}</Text>}\r\n                </View>\r\n                <View>\r\n                    <Text style={styles.label}>E-mail:</Text>\r\n                    <Controller\r\n                        control={control}\r\n                        render={(props) => (\r\n                            <TextInput\r\n                                autoCompleteType='email'\r\n                                autoCorrect={false}\r\n                                keyboardType='email-address'\r\n                                textContentType='emailAddress'\r\n                                style={styles.input}\r\n                                onBlur={props.onBlur}\r\n                                onChangeText={(value) => props.onChange(value)}\r\n                                value={props.value}\r\n                            />\r\n                        )}\r\n                        rules={{\r\n                            required: 'O e-mail é obrigatório.',\r\n                            pattern: {\r\n                                value: /^\\S+@\\S+$/i,\r\n                                message: 'Formato de e-mail inválido.'\r\n                            },\r\n                        }}\r\n                        name='email'\r\n                        defaultValue=''\r\n                    />\r\n                    {errors.email && <Text style={{ color: 'red' }}>{errors.email.message}</Text>}\r\n                </View>\r\n                <View>\r\n                    <Text style={styles.label}>Telefone:</Text>\r\n                    <Controller\r\n                        control={control}\r\n                        render={(props) => (\r\n                            <TextInput\r\n                                autoCompleteType='tel'\r\n                                autoCorrect={false}\r\n                                keyboardType='phone-pad'\r\n                                textContentType='telephoneNumber'\r\n                                style={styles.input}\r\n                                onBlur={props.onBlur}\r\n                                onChangeText={(value) => props.onChange(value)}\r\n                                value={props.value}\r\n                            />\r\n                        )}\r\n                        rules={{ required: 'O telefone é obrigatório.' }}\r\n                        name='phoneNumber'\r\n                        defaultValue=''\r\n                    />\r\n                    {errors.phoneNumber && <Text style={{ color: 'red' }}>{errors.phoneNumber.message}</Text>}\r\n                </View>\r\n                <View>\r\n                    <Text style={styles.label}>Senha:</Text>\r\n                    <Controller\r\n                        control={control}\r\n                        render={(props) => (\r\n                            <TextInput\r\n                                secureTextEntry\r\n                                autoCompleteType='password'\r\n                                autoCorrect={false}\r\n                                textContentType='newPassword'\r\n                                style={styles.input}\r\n                                onBlur={props.onBlur}\r\n                                onChangeText={(value) => props.onChange(value)}\r\n                                value={props.value}\r\n                            />\r\n                        )}\r\n                        rules={{ required: 'A senha é obrigatória.' }}\r\n                        name='password'\r\n                        defaultValue=''\r\n                    />\r\n                    {errors.password && <Text style={{ color: 'red' }}>{errors.password.message}</Text>}\r\n                </View>\r\n                <View>\r\n                    <Text style={styles.label}>Confirmação de senha:</Text>\r\n                    <Controller\r\n                        control={control}\r\n                        render={(props) => (\r\n                            <TextInput\r\n                                secureTextEntry\r\n                                autoCompleteType='password'\r\n                                autoCorrect={false}\r\n                                textContentType='password'\r\n                                style={styles.input}\r\n                                onBlur={props.onBlur}\r\n                                onChangeText={(value) => props.onChange(value)}\r\n                                value={props.value}\r\n                            />\r\n                        )}\r\n                        rules={{\r\n                            required: 'A confirmação de senha é obrigatória.',\r\n                            validate: {\r\n                                matchesPreviousPassword: (value) => {\r\n                                    const { password } = getValues();\r\n                                    return password === value || 'As senhas não coincidem.';\r\n                                }\r\n                            }\r\n                        }}\r\n                        name='passwordConfirmation'\r\n                        defaultValue=''\r\n                    />\r\n                    {errors.passwordConfirmation && <Text style={{ color: 'red' }}>{errors.passwordConfirmation.message}</Text>}\r\n                </View>\r\n                <View style={styles.button}>\r\n                    <Button title='CADASTRAR' onPress={handleSubmit(onSubmit, onError)} />\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 8,\r\n        justifyContent: 'center',\r\n        backgroundColor: '#0e101c',\r\n    },\r\n    formBox: {\r\n        paddingVertical: 20,\r\n    },\r\n    label: {\r\n        margin: 10,\r\n        marginLeft: 0,\r\n        color: 'white',\r\n    },\r\n    button: {\r\n        marginTop: 20,\r\n        height: 40,\r\n        borderRadius: 4,\r\n    },\r\n    input: {\r\n        backgroundColor: 'white',\r\n        height: 40,\r\n        padding: 10,\r\n        borderRadius: 20,\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}